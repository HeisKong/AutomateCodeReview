# ===== AutomateDB (Primary) =====
spring.datasource.url=jdbc:postgresql://localhost:5432/automateDB
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# ===== SonarQube DB (Secondary) =====
sonar.datasource.url=jdbc:postgresql://localhost:5432/SonarQube
sonar.datasource.username=postgres
sonar.datasource.password=password
sonar.datasource.driver-class-name=org.postgresql.Driver

# ===== JPA ?????? Primary ???????? =====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


## ===== Sonar Web API =====
#sonar.api.base-url=${SONAR_BASE_URL:http://localhost:9000}
#sonar.api.token=${SONAR_API_TOKEN:}
#sonar.webhook.secret=${SONAR_WEBHOOK_SECRET:}

# (?????????) ??????????
management.endpoints.web.exposure.include=health,info




# JWT Config
jwt.secret=oxDrDfQ6x+UZgbjdjiAE80OLigXMK3L36V5uTf4tnN7tDim11SNXtlN8tTU1NclmAzsg50qvMlYYO7Hp8LKD3g==  # ???????? Base64 64 ????
jwt.expiration-ms=86400000

# SonarQube
sonar.host-url=http://localhost:9000
sonar.useHostInternalOnWindows=false
sonar.metrics=bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density
sonar.scanner-image=sonarsource/sonar-scanner-cli


# ???????????? host (????????? PATH ???? ??????????)
sonar.scanner-exec=sonar-scanner
node.exec=node
npm.exec=npm
maven.exec=mvn
gradle.exec=gradle

# metrics + retry
sonar.metrics.retries=3
sonar.metrics.delay-ms=2000
sonar.metrics.max-delay-ms=15000

# Webhook HMAC secret (??????????????????? SonarQube)
sonar.webhook.secret=b45de24c7a0fc50f4ab3112c3166407e1111709632fd24d2c82dcee0f6f69136
sonar.service-token=squ_e9502c267e2478573222534bd6924d41a432f89a

